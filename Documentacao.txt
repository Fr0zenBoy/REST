REST API C# com ASP.NET Core Web API


Protocolo HTTP: Conversar com o servidor atraves de REQUEST E RESPONSE ( Client faz um request ao Server que retorna um response )

Um REQUEST: Possui o Verbo HTTP : GET para obter, POST para inserir, PATH ou PUT para atualizar e DELETE para excluir
            Precisa informar a URI : qual o endereço da internet
            Versão: 1.1
                       
            Conceito de Request HEADER  : É o cabeçalho da requisição (e passado a versão do broweser, cockier de autenticacao... )
            Conceito de Request MASSAGE : É passado as informações ( Dados do produto )
                       
Um RESPONSE: Códigos de status de respostas do servidor HTTP: 100 = informaçao 200 = ok , 300 = redirecionamente, 400 = não permitido, 500 = erro

            Conceito de Response HEADER  : Passar o cockie, token 
            Conceito de Response MASSAGE : Informar a resposta q vai ser exibida ( lista de produto, pagina html e etc..)
                        


ARQUITETURA REST : Envio de dados com base em REST - Estado de representação do dado

        CLIENTE -> DADOS -> HTTP -> SERVIDOR

           1° CLIENTE = começa a transferir Dados
           2° DADOS   = vai na parte do body do verbo http, transmiti os dados atraves do protocolo htttp
           3° PROTOCOLO HTTP: possui o request q é uma ENVELOPE(mensagem) pois esta formatado padrao de HEADER e MASSAGE
           4° SERVIDOR: o servidor recebe a mensagem 
        
           Simplesmente pega um dado via texto, passa via texto e recebe via texto
           

Crud Básico em ASP.NET Core 

            create a new project > ASP.NET Core Web Application
            .NET Core > ASP.NET Core 2.2 > API

Criar a pasta Model > botão direito sobre o projeto ( nova pasta)

            na pasta Model > criar a class FornecedorViewModel.cs
            
FornecedorViewModel.cs

            public class FornecedorViewModel{
            
            [key]
            public Guid id {get; set;}
            
            [Required(ErrorMessage = " O campo {0} é obrigatório")]
            [StringLength(100, ErroMessage = " O campo {0} precisa ter entre {2} e {1} caracteres", MinimumLength = 2)]
            
            [Required(ErroMessage = " O campo {0} e obrigatorio")]
            [StringLength(14, ErrorMessage = " O campo {0} precisa ter entre {2} e {1} caracteres", MinimunLength = 11)]
            
            public string Nome {get; set;}
            
            public int TipoFornecedor {get; set;}
            
            public bool Ativo {get; set;}
